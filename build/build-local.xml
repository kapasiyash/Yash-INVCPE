<?xml version="1.0"?>
<project name="cpe-build" default="build-app" basedir=".">

	<property file="${basedir}/build.properties"/>	
	<property name="appdir" location="../application/"/>	
	
	<property name="lib" location="lib"/>	
	<property name="doc" location="doc"/>		
	<property name="build" location="build"/>		
	<property name="dist" location="dist"/>		
	<property name="release" location="release"/>
	<property name="rmiclient" location="rmiclient"/>				
	<property name="findbug" location="${lib}/findbug"/>			    
    <property name="builder.name" value="yash.kapasi" ></property>  	
	
	<property name="fullversion.release"  location="fullversion"/>
	
	<property name="project" value="Crestel CPE"/>	
	<property name="bl-module-name" value="inventorybl"/>	
	<property name="exec-web-module-name" value="inventoryweb"/>	
	
			
	<property name="bl-module-app-dir" location="${appdir}/${bl-module-name}"/>	
	<property name="exec-web-module-app-dir" location="${appdir}/${exec-web-module-name}"/>	
	
	<property name="bl-module-build-dir" location="${build}/${bl-module-name}"/>	
	<property name="exec-web-module-build-dir" location="${build}/${exec-web-module-name}"/>	
	
	
	<property environment="env"/> 
	<property name="inventory.svn.rev" value="${env.BUILD_NUMBER}"/>    
		
    <tstamp prefix="info">  
        <format property="current-date" pattern="d-MMMM-yyyy" locale="en" ></format>  
        <format property="current-time" pattern="hh:mm:ss a z" locale="en" ></format>  
        <format property="year-month-day" pattern="yyyy-MM-dd" locale="en" ></format>  
    </tstamp>  
	
	<path id="classpath">
        <fileset dir="${lib}" includes="**/*.jar"/>		
    </path>
		
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" >  
		<classpath refid="classpath"></classpath>  
	</taskdef>
	<taskdef name="fmpp" classname="fmpp.tools.AntTask" >
		<classpath refid="classpath"/>
	</taskdef>
	<taskdef name="freemarker" classname="freemarker.ext.ant.FreemarkerXmlTask">
		<classpath>
			<pathelement location="${basedir}/lib/freemarker.jar" />
		</classpath>
	</taskdef>
	<target name="clean" >
		<delete dir="${doc}" />
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${svn.checkout.dir}" />
	</target>	
		
	<target name="init" >		
		<mkdir dir="${release}" />
		<mkdir dir ="${fullversion.release}" />
		<mkdir dir="${release}/${inventory.svn.rev}" />
		<mkdir dir="${doc}" />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />		
		<mkdir dir="${svn.checkout.dir}" />
	</target>	
	
	 <target name="checkout" >
		 <subant target="checkout">
            <filelist dir="${basedir}" files="build-checkout.xml"/>
        </subant>
	 </target> 
	
	 <target name="commit-fullversion" >
		<subant target="commit-fullversions" inheritall="true">
            <filelist dir="${basedir}" files="build-checkout.xml" />
        </subant>
	 </target>
    <target name="compile" >  
        
		<echo message="Compiling Business Layer Source"/>
		<mkdir dir="${build}/${bl-module-name}" />
        <javac  srcdir="${bl-module-app-dir}/src"  destdir="${build}/${bl-module-name}"  classpathref="classpath" >								
		</javac>
		
		<echo message="Compiling Business Layer Test Case Source"/>
		<javac  srcdir="${bl-module-app-dir}/test"  destdir="${build}/${bl-module-name}"   >								
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
				<pathelement location="${build}/${bl-module-name}"/>
			</classpath>
		</javac>
		
		<echo message="Compiling Web Layer Source"/>
		<mkdir dir="${build}/${exec-web-module-name}" />
		<javac  srcdir="${exec-web-module-app-dir}/src"  destdir="${build}/${exec-web-module-name}" 
	
	includeantruntime="false"
				debug="on"
				debuglevel="lines,vars,source"
	
		classpathref="classpath" >
			<classpath>
				<fileset dir="${exec-web-module-app-dir}/webroot/WEB-INF/lib">
				  <include name="**/*.jar"/>
				  <include name="**/*.zip"/>
				</fileset>           
				<fileset dir="${basedir}/lib">
					<include name="**/*.jar"/>
					<include name="**/*.zip"/>
				</fileset>
				<pathelement location="${build}/${bl-module-name}"/>
          </classpath>			
		</javac>
				
    </target>  
	
	<target name="prepare-java-doc" >  		
		<javadoc sourcepath="${bl-module-app-dir}/src" destdir="${doc}/inventorybl/" classpathref="classpath" 
		 author="true"
         use="true"
         windowtitle="CPEBL-DOCS" group="BL com.elitecore.ar.bl*,Core com.elitecore.ar.core*,Util com.elitecore.ar.util*" >   														
		<doctitle><![CDATA[<h1>Crestel CPE Managment </h1>]]></doctitle>
		<bottom><![CDATA[<i>Copyright &#169; 2013 Elitecore Technologies Pvt.Ltd. All Rights Reserved.</i>]]></bottom>
		<tag name="todo" scope="all" description="To do:"/>
    </javadoc>
	</target>  

	<target name="make-binaries" >      
		
		

		<echo message="Creating Business Layer JAR"/>		
		<jar destfile="${release}/${inventory.svn.rev}/inventorybl.jar" basedir="${bl-module-build-dir}" excludes="**/bl/ws/**">  
			<fileset dir="${bl-module-app-dir}/src">
				<include name="META-INF/persistence.xml"/>
				<include name="META-INF/jboss-service.xml"/>
				
			</fileset>
			<manifest>                  
				<attribute name="Built-By"      value="Elitecore Technologies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Created-By"    value="Elitecore Techonolgies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Built-On" value="${info.current-date}" />  
				<attribute name="Built-At" value="${info.current-time}" />  
				<attribute name="version"  value="CRESTELCPE 1.0"/>
			</manifest>  
		</jar>  
		

		<echo message="Creating Inventory ISL Archieve"/>
		<jar destfile="${release}/${inventory.svn.rev}/inventoryblisl.jar" basedir="${bl-module-build-dir}">     
		
		 <patternset id="a">
			<include name="**/ws/**"/>
			<exclude name="**/facade/ws/**"/>
		</patternset>
		</jar> 
				
			
		<echo message="Creating Web Layer JAR"/>			
		<jar destfile="${release}/${inventory.svn.rev}/inventoryweb.jar" basedir="${exec-web-module-build-dir}">  
			<manifest>                  
				<attribute name="Built-By"      value="Elitecore Technologies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Created-By"    value="Elitecore Techonolgies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Built-On" value="${info.current-date}" ></attribute>  
				<attribute name="Built-At" value="${info.current-time}" ></attribute>  
				<attribute name="version"  value="CRESTELCPE-1.0"/>
			</manifest>  
		</jar>  

		<copy file="${release}/${inventory.svn.rev}/inventoryweb.jar" todir="${exec-web-module-app-dir}/webroot/WEB-INF/lib" />	
	
		
		<echo message="Creating Enterprise Archieve"/>		
		<jar jarfile="${release}/${inventory.svn.rev}/inventoryapp.ear">
            <fileset dir="${release}/${inventory.svn.rev}/">
                <include name="inventorybl.jar"/>
		<include name="inventoryblisl.jar"/>
            </fileset>
            <manifest>
				<attribute name="Built-By"      value="Elitecore Technologies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Created-By"    value="Elitecore Techonolgies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Built-On" value="${info.current-date}" ></attribute>  
				<attribute name="Built-At" value="${info.current-time}" ></attribute>  
				<attribute name="version"  value="CRESTELCPE-1.0"/>
            </manifest>
        </jar>
		

	<echo message="Creating Client Archieve"/>
		<jar destfile="${rmiclient}/inventory-client.jar" >     
	 	     <fileset dir="${bl-module-build-dir}" >

			<exclude name="**/*Facade.class/**"/>
			<exclude name="**/entity/**"/>
			<exclude name="**/session/**"/>
			<exclude name="**/ws/**"/>
			<exclude name="**/controller/**"/>
			<exclude name="**/agents/**"/>	
			
		</fileset>
		<fileset dir="${bl-module-build-dir}" >
			<include name="**/I*Facade.class/**"/>
			<include name="**/agents/base/**"/>
			<include name="**/ws/data/**"/>	
		</fileset>
		</jar>

		
<!--		<copy file="${release}/${inventory.svn.rev}/inventorybl.jar" todir="${exec-web-module-app-dir}/webroot/WEB-INF/lib" />-->

		<copy file="${rmiclient}/inventory-client.jar" todir="${exec-web-module-app-dir}/webroot/WEB-INF/lib" />

		<echo message="Creating Web Layer Archieve"/>		
		
		<jar jarfile="${release}/${inventory.svn.rev}/inventoryweb.war">
			<fileset dir="${exec-web-module-app-dir}/webroot">
				<include name="**/**/*.*"/>
			</fileset>
			
			 <manifest>
				<attribute name="Built-By"      value="Elitecore Technologies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Created-By"    value="Elitecore Techonolgies Pvt. Ltd - ${builder.name}"/>
				<attribute name="Built-On" value="${info.current-date}" ></attribute>  
				<attribute name="Built-At" value="${info.current-time}" ></attribute>  
				<attribute name="version"  value="CRESTELCPE-5.2.0-${inventory.svn.rev}"/>
            </manifest>
		</jar>	
			
	
		
	</target>	
	
	
	<!--- Making Database full version -->
	
	<property name="fullversion" value="${basedir}/fullversion" />
	<property name="fullversion.tempalate" value="${fullversion}/template" />
	<property name="template.dbfull" value="${fullversion.tempalate}/CRESTEL-CPE-DBFullV6.0.4" />
	<property name="template.inventoryfull" value="${fullversion.tempalate}/CRESTEL-CPE-FullV6.0.4" />
	
	<property name="dbfull" value="${fullversion}/CRESTEL-CPE-DBFullV6.0.4" />
	<property name="inventoryfull" value="${fullversion}/CRESTEL-CPE-FullV6.0.4" />
	
	
	<target name="make-database-fullversion">
		<delete dir="${dbfull}"/>
		<mkdir dir="${dbfull}" />
		<copy  todir="${dbfull}" >
			<fileset dir="${template.dbfull}" >
				<include name="**/**/*" />
			</fileset>
		</copy>
		<echo message="Making Database Fullversion" />
		<echo message="Copying SQL Files" />
		
		
		<copy  todir="${dbfull}/CRESTEL-CPE-DBFullV6.0.4" >
			<fileset dir="${bl-module-app-dir}/setup" >
				<include name="*.sql" />
				<exclude name="data-sources.sql" />
				<exclude name="synomnys.sql" />
			</fileset>
		</copy>
		<echo message="Compressing Database Fullversion" />
		<tar compression="gzip" destfile="${dbfull}.tar.gz">
			<tarfileset dir="${dbfull}/" >
				<include name="**/**/*"/>					
			</tarfileset>
		</tar>
		
		<echo message="Moving to Release" />
		
	
		
	</target>
	
	
	
	<target name="make-inventory-fullversion" >
		<delete dir="${inventoryfull}"/>
		<mkdir dir="${inventoryfull}" />
		<copy  todir="${inventoryfull}" >
			<fileset dir="${template.inventoryfull}" >
				<include name="**/**/*" />
			</fileset>
		</copy>

		
		<fmpp sourceFile="${template.inventoryfull}/version.info.ftl" outputFile="${inventoryfull}/version.info">		
			<data expandProperties="yes">
				 ant: antProperties()
				 versionNumber: '${version.number}'
				 buildNumber:'${build.number}'				
			</data>
		</fmpp>

		<echo message="Making Crestel CPE Fullversion" />
		<echo message="Copying SQL Files" />
		
		<copy todir="${inventoryfull}/lib" >
			<fileset dir="${bl-module-app-dir}/lib" >
				<include name="*.jar" />
			</fileset>
		</copy>
		
		<copy file="${release}/${inventory.svn.rev}/inventoryapp.ear" todir="${inventoryfull}/modules/cpe/ear" />
		
		<copy  todir="${inventoryfull}/modules/cpe/clients/sar" >
				<fileset  dir="${bl-module-app-dir}/lib">
						<include name="*.sar" />
				</fileset>
		</copy>
		
		<copy file="${release}/${inventory.svn.rev}/inventoryweb.war" todir="${inventoryfull}/modules/web/clients/web" />
		
		<echo message="Compressing Crestel CPE Fullversion" />
		
		<tar compression="gzip" destfile="${inventoryfull}.tar.gz">
			<tarfileset dir="${inventoryfull}/" >
				<exclude name="**/*.ftl" />
				<include name="**/**/*"/>					
			</tarfileset>
		</tar>
	
	</target>
	
	<target name="make-fullversion" > 
		<antcall target="make-database-fullversion" />
		
		<antcall target="make-inventory-fullversion" />
		
	</target> 
	
	<target name="prepare-db-doc">
		<delete dir="${doc}/db-docs" />
		<mkdir dir="${doc}/db-docs" />
		<java jar="${lib}/schemaspy/schemaSpy_5.0.0.jar" output="${doc}/db-docs/output.log" error="${doc}/db-docs/error.log" fork="true">				  		 		  		  
		  
		  <arg line="-t orathin"/>
		  <arg line="-host ${db.host}"/>
		  <arg line="-port ${db.port}"/>
		  <arg line="-db ${db.sid}"/>
		  <arg line="-u ${db.username}"/>
		  <arg line="-p ${db.password}"/>
		  <arg line="-cp ${lib}/jdbc/oracle9i.jar"/>
		  <arg line="-o ${doc}/db-docs"/>		  
		</java>
	</target>
	
	
	<target name="findbug" >    		
		<delete dir="${findbug.dir}" />
		<mkdir  dir="${findbug.dir}" />
		<findbugs home="${findbug}"  output="xml:withMessages" outputFile="${findbug.dir}/findbugs-inventory-bl.xml" excludeFilter="${findbug}/findbugsExclude.xml" >          
			<sourcePath path="${bl-module-app-dir}/src"  />				 
			<class location="${release}/${inventory.svn.rev}/inventorybl.jar"></class>  
		</findbugs>  		


		 <findbugs home="${findbug}"   output="html" stylesheet="fancy-hist.xsl" outputFile="${findbug.dir}/findbugs-inventory-bl.html" excludeFilter="${findbug}/findbugsExclude.xml" >          
			<sourcePath path="${bl-module-app-dir}/src"  />				 
			<class location="${release}/${inventory.svn.rev}/inventorybl.jar"></class>  
		</findbugs>  		 
		

		<findbugs home="${findbug}"  output="xml:withMessages" outputFile="${findbug.dir}/findbugs-inventory-web.xml" excludeFilter="${findbug}/findbugsWebExclude.xml" >          
			<sourcePath path="${exec-web-module-app-dir}/src"  />				 			
			<class location="${release}/${inventory.svn.rev}/inventoryweb.jar"></class>  
		</findbugs>  		

		 <findbugs home="${findbug}"   output="html" stylesheet="fancy-hist.xsl" outputFile="${findbug.dir}/findbugs-inventory-web.html" excludeFilter="${findbug}/findbugsWebExclude.xml" >          
			<sourcePath path="${exec-web-module-app-dir}/src"  />				 			
			<class location="${release}/${inventory.svn.rev}/inventoryweb.jar"></class>  
		</findbugs>  	

	</target>
	<path id="junit.class.path" >
		<fileset dir="${lib}" includes="**/*.jar"/>		
		<pathelement location="${build}/${bl-module-name}" />
	</path>
	<target name="junit"  depends="compile">
		<junit printsummary="on" fork="true" haltonfailure="false">
			<classpath refid="junit.class.path" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${bl-module-app-dir}/test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${test.report.dir}">
			<fileset dir="${test.report.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="./report/html"/>
		</junitreport>
	</target>	
	
	<target name="build-app">
		<antcall target="clean"/>
		<antcall target="init"/>	
		<antcall target="compile"/>	
		<antcall target="make-binaries"/>
		<antcall target="make-fullversion"/>
		<!--<antcall target="prepare-java-doc"/> -->
		 <antcall target="findbug"/> 
		<antcall target="junit" />
	</target>
	
</project>
